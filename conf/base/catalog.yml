# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://docs.kedro.org/en/stable/data/data_catalog.html
#
# We support interacting with a variety of data stores including local file systems, cloud, network and HDFS
#
# An example data set definition can look as follows:
#
#bikes:
#  type: pandas.CSVDataset
#  filepath: "data/01_raw/bikes.csv"
#
#weather:
#  type: spark.SparkDataset
#  filepath: s3a://your_bucket/data/01_raw/weather*
#  file_format: csv
#  credentials: dev_s3
#  load_args:
#    header: True
#    inferSchema: True
#  save_args:
#    sep: '|'
#    header: True
#
#scooters:
#  type: pandas.SQLTableDataset
#  credentials: scooters_credentials
#  table_name: scooters
#  load_args:
#    index_col: ['name']
#    columns: ['name', 'gear']
#  save_args:
#    if_exists: 'replace'
#    # if_exists: 'fail'
#    # if_exists: 'append'
#
# The Data Catalog supports being able to reference the same file using two different Dataset implementations
# (transcoding), templating and a way to reuse arguments that are frequently repeated. See more here:
# https://docs.kedro.org/en/stable/data/data_catalog.html

bronze_bacen:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/bacen_selic/
  file_format: delta

bronze_cvm:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/cvm_if_di/
  file_format: delta

silver_bacen:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/bacen_selic/
  file_format: delta

silver_cvm:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/cvm_if_di/
  file_format: delta

gold_bacen:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/gold/bacen_kpis/
  file_format: delta

gold_cvm:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/gold/cvm_kpis/
  file_format: delta

# SELIC Bronze data from BACEN API (Pandas for ingestion)
bronze_selic:
  type: pandas.ParquetDataset
  filepath: data/01_raw/selic_bacen.parquet

# SELIC Bronze data converted to Spark
bronze_selic_spark:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/bacen_selic/
  file_format: delta
  save_args:
    mode: overwrite

# SELIC Silver layer
silver_selic:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/bacen_selic/
  file_format: delta
  save_args:
    mode: overwrite

# SELIC Gold layer (KPIs and aggregations)
gold_selic:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/gold/selic_kpis/
  file_format: delta
  save_args:
    mode: overwrite

# SELIC validation results
selic_validation_results:
  type: json.JSONDataset
  filepath: data/08_reporting/selic_validation_results.json