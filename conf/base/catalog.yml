# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://docs.kedro.org/en/stable/data/data_catalog.html
#
# We support interacting with a variety of data stores including local file systems, cloud, network and HDFS
#
# An example data set definition can look as follows:
#
#bikes:
#  type: pandas.CSVDataset
#  filepath: "data/01_raw/bikes.csv"
#
#weather:
#  type: spark.SparkDataset
#  filepath: s3a://your_bucket/data/01_raw/weather*
#  file_format: csv
#  credentials: dev_s3
#  load_args:
#    header: True
#    inferSchema: True
#  save_args:
#    sep: '|'
#    header: True
#
#scooters:
#  type: pandas.SQLTableDataset
#  credentials: scooters_credentials
#  table_name: scooters
#  load_args:
#    index_col: ['name']
#    columns: ['name', 'gear']
#  save_args:
#    if_exists: 'replace'
#    # if_exists: 'fail'
#    # if_exists: 'append'
#
# The Data Catalog supports being able to reference the same file using two different Dataset implementations
# (transcoding), templating and a way to reuse arguments that are frequently repeated. See more here:
# https://docs.kedro.org/en/stable/data/data_catalog.html

# ==============================================================================
# BACEN DATA (Existing)
# ==============================================================================

bronze_bacen:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/bacen_selic/
  file_format: delta

bronze_cvm:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/cvm_if_di/
  file_format: delta

# ==============================================================================
# YAHOO FINANCE DATA
# ==============================================================================

# Yahoo Finance ETF Series - Raw Layer
yahoo_bova11_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/yahoo/yahoo_bova11_raw.json

yahoo_ivvb11_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/yahoo/yahoo_ivvb11_raw.json

yahoo_smal11_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/yahoo/yahoo_smal11_raw.json

yahoo_nasd11_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/yahoo/yahoo_nasd11_raw.json

yahoo_spxi11_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/yahoo/yahoo_spxi11_raw.json

yahoo_fixa11_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/yahoo/yahoo_fixa11_raw.json

# Yahoo Finance Commodity Series - Raw Layer
yahoo_petroleo_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/yahoo/yahoo_petroleo_raw.json

yahoo_ouro_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/yahoo/yahoo_ouro_raw.json

yahoo_soja_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/yahoo/yahoo_soja_raw.json

yahoo_cafe_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/yahoo/yahoo_cafe_raw.json

# Yahoo Finance Currency Series - Raw Layer
yahoo_usd_brl_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/yahoo/yahoo_usd_brl_raw.json

# Yahoo Finance ETF Series - Bronze Layer
yahoo_bova11_bronze:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/yahoo_finance/etf/bova11/
  file_format: delta
  save_args:
    mode: overwrite

yahoo_ivvb11_bronze:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/yahoo_finance/etf/ivvb11/
  file_format: delta
  save_args:
    mode: overwrite

yahoo_smal11_bronze:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/yahoo_finance/etf/smal11/
  file_format: delta
  save_args:
    mode: overwrite

yahoo_nasd11_bronze:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/yahoo_finance/etf/nasd11/
  file_format: delta
  save_args:
    mode: overwrite

yahoo_spxi11_bronze:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/yahoo_finance/etf/spxi11/
  file_format: delta
  save_args:
    mode: overwrite

yahoo_fixa11_bronze:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/yahoo_finance/etf/fixa11/
  file_format: delta
  save_args:
    mode: overwrite

# Yahoo Finance Commodity Series - Bronze Layer
yahoo_petroleo_bronze:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/yahoo_finance/commodity/petroleo/
  file_format: delta
  save_args:
    mode: overwrite

yahoo_ouro_bronze:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/yahoo_finance/commodity/ouro/
  file_format: delta
  save_args:
    mode: overwrite

yahoo_soja_bronze:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/yahoo_finance/commodity/soja/
  file_format: delta
  save_args:
    mode: overwrite

yahoo_cafe_bronze:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/yahoo_finance/commodity/cafe/
  file_format: delta
  save_args:
    mode: overwrite

# Yahoo Finance Currency Series - Bronze Layer
yahoo_usd_brl_bronze:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/yahoo_finance/currency/usd_brl/
  file_format: delta
  save_args:
    mode: overwrite

# Yahoo Finance ETF Series - Silver Layer
yahoo_bova11_silver:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/yahoo_finance/etf/bova11/
  file_format: delta
  save_args:
    mode: overwrite

yahoo_ivvb11_silver:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/yahoo_finance/etf/ivvb11/
  file_format: delta
  save_args:
    mode: overwrite

yahoo_smal11_silver:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/yahoo_finance/etf/smal11/
  file_format: delta
  save_args:
    mode: overwrite

yahoo_nasd11_silver:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/yahoo_finance/etf/nasd11/
  file_format: delta
  save_args:
    mode: overwrite

yahoo_spxi11_silver:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/yahoo_finance/etf/spxi11/
  file_format: delta
  save_args:
    mode: overwrite

yahoo_fixa11_silver:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/yahoo_finance/etf/fixa11/
  file_format: delta
  save_args:
    mode: overwrite

# Yahoo Finance Commodity Series - Silver Layer
yahoo_petroleo_silver:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/yahoo_finance/commodity/petroleo/
  file_format: delta
  save_args:
    mode: overwrite

yahoo_ouro_silver:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/yahoo_finance/commodity/ouro/
  file_format: delta
  save_args:
    mode: overwrite

yahoo_soja_silver:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/yahoo_finance/commodity/soja/
  file_format: delta
  save_args:
    mode: overwrite

yahoo_cafe_silver:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/yahoo_finance/commodity/cafe/
  file_format: delta
  save_args:
    mode: overwrite

# Yahoo Finance Currency Series - Silver Layer
yahoo_usd_brl_silver:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/yahoo_finance/currency/usd_brl/
  file_format: delta
  save_args:
    mode: overwrite

# Yahoo Finance Validation Results
yahoo_bova11_validation_results:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/yahoo/yahoo_bova11_validation_results.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
yahoo_ivvb11_validation_results:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/yahoo/yahoo_ivvb11_validation_results.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
yahoo_smal11_validation_results:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/yahoo/yahoo_smal11_validation_results.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
yahoo_nasd11_validation_results:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/yahoo/yahoo_nasd11_validation_results.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
yahoo_spxi11_validation_results:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/yahoo/yahoo_spxi11_validation_results.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
yahoo_fixa11_validation_results:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/yahoo/yahoo_fixa11_validation_results.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
yahoo_petroleo_validation_results:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/yahoo/yahoo_petroleo_validation_results.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
yahoo_ouro_validation_results:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/yahoo/yahoo_ouro_validation_results.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
yahoo_soja_validation_results:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/yahoo/yahoo_soja_validation_results.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
yahoo_cafe_validation_results:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/yahoo/yahoo_cafe_validation_results.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
yahoo_usd_brl_validation_results:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/yahoo/yahoo_usd_brl_validation_results.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
# Yahoo Finance Catalog Entries
yahoo_bova11_catalog_entry:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/yahoo/yahoo_bova11_catalog_entry.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
yahoo_ivvb11_catalog_entry:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/yahoo/yahoo_ivvb11_catalog_entry.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
yahoo_smal11_catalog_entry:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/yahoo/yahoo_smal11_catalog_entry.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
yahoo_nasd11_catalog_entry:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/yahoo/yahoo_nasd11_catalog_entry.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
yahoo_spxi11_catalog_entry:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/yahoo/yahoo_spxi11_catalog_entry.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
yahoo_fixa11_catalog_entry:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/yahoo/yahoo_fixa11_catalog_entry.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
yahoo_petroleo_catalog_entry:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/yahoo/yahoo_petroleo_catalog_entry.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
yahoo_ouro_catalog_entry:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/yahoo/yahoo_ouro_catalog_entry.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
yahoo_soja_catalog_entry:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/yahoo/yahoo_soja_catalog_entry.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
yahoo_cafe_catalog_entry:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/yahoo/yahoo_cafe_catalog_entry.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
yahoo_usd_brl_catalog_entry:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/yahoo/yahoo_usd_brl_catalog_entry.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
silver_bacen:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/bacen_selic/
  file_format: delta

silver_cvm:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/cvm_if_di/
  file_format: delta

gold_bacen:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/gold/bacen_kpis/
  file_format: delta

gold_cvm:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/gold/cvm_kpis/
  file_format: delta

# SELIC Raw data from BACEN API (stored in MinIO as JSON)
raw_selic:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/bacen/selic_bacen_raw.json

# SELIC Bronze data (structured but raw)
bronze_selic:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/bacen_selic/
  file_format: delta
  save_args:
    mode: overwrite

# SELIC Silver layer (cleaned and validated)
silver_selic:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/bacen_selic/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

# SELIC Gold layer (KPIs and aggregations)
gold_selic:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/gold/selic_kpis/
  file_format: delta
  save_args:
    mode: overwrite

# SELIC validation results
selic_validation_results:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/bacen/selic_validation_results.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
# IPCA Raw data from BACEN API (stored in MinIO as JSON)
raw_ipca:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/bacen/ipca_bacen_raw.json

# IPCA Bronze data (structured but raw)
bronze_ipca:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/bacen_ipca/
  file_format: delta
  save_args:
    mode: overwrite

# IPCA Silver layer (cleaned and validated)
silver_ipca:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/bacen_ipca/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

# IPCA Gold layer (KPIs and aggregations)
gold_ipca:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/gold/ipca_kpis/
  file_format: delta
  save_args:
    mode: overwrite

# IPCA validation results
ipca_validation_results:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/bacen/ipca_validation_results.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
# SELIC Meta Raw data from BACEN API (stored in MinIO as JSON)
raw_selic_meta:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/bacen/selic_meta_bacen_raw.json

# SELIC Meta Bronze data (structured but raw)
bronze_selic_meta:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/bacen_selic_meta/
  file_format: delta
  save_args:
    mode: overwrite

# SELIC Meta Silver layer (cleaned and validated)
silver_selic_meta:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/bacen_selic_meta/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

# SELIC Meta Gold layer (KPIs and aggregations)
gold_selic_meta:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/gold/selic_meta_kpis/
  file_format: delta
  save_args:
    mode: overwrite

# SELIC Meta validation results
selic_meta_validation_results:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/bacen/selic_meta_validation_results.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
# OVER Raw data from BACEN API (stored in MinIO as JSON)
raw_over:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/bacen/over_bacen_raw.json

# OVER Bronze data (structured but raw)
bronze_over:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/bacen_over/
  file_format: delta
  save_args:
    mode: overwrite

# OVER Silver layer (cleaned and validated)
silver_over:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/bacen_over/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

# OVER Gold layer (KPIs and aggregations)
gold_over:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/gold/over_kpis/
  file_format: delta
  save_args:
    mode: overwrite

# OVER validation results
over_validation_results:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/bacen/over_validation_results.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
# CDI Raw data from BACEN API (stored in MinIO as JSON)
raw_cdi:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/bacen/cdi_bacen_raw.json

# CDI Bronze data (structured but raw)
bronze_cdi:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/bacen_cdi/
  file_format: delta
  save_args:
    mode: overwrite

# CDI Silver layer (cleaned and validated)
silver_cdi:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/bacen_cdi/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

# CDI Gold layer (KPIs and aggregations)
gold_cdi:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/gold/cdi_kpis/
  file_format: delta
  save_args:
    mode: overwrite

# CDI validation results
cdi_validation_results:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/bacen/cdi_validation_results.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
# TLP Raw data from BACEN API (stored in MinIO as JSON)
raw_tlp:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/bacen/tlp_bacen_raw.json

# TLP Bronze data (structured but raw)
bronze_tlp:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/bacen_tlp/
  file_format: delta
  save_args:
    mode: overwrite

# TLP Silver layer (cleaned and validated)
silver_tlp:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/bacen_tlp/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

# TLP Gold layer (KPIs and aggregations)
gold_tlp:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/gold/tlp_kpis/
  file_format: delta
  save_args:
    mode: overwrite

# TLP validation results
tlp_validation_results:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/bacen/tlp_validation_results.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
# IPCA-15 Raw data from BACEN API (stored in MinIO as JSON)
raw_ipca_15:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/bacen/ipca_15_bacen_raw.json

# IPCA-15 Bronze data (structured but raw)
bronze_ipca_15:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/bacen_ipca_15/
  file_format: delta
  save_args:
    mode: overwrite

# IPCA-15 Silver layer (cleaned and validated)
silver_ipca_15:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/bacen_ipca_15/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

# IPCA-15 Gold layer (KPIs and aggregations)
gold_ipca_15:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/gold/ipca_15_kpis/
  file_format: delta
  save_args:
    mode: overwrite

# IPCA-15 validation results
ipca_15_validation_results:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/bacen/ipca_15_validation_results.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
# INPC Raw data from BACEN API (stored in MinIO as JSON)
raw_inpc:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/bacen/inpc_bacen_raw.json

# INPC Bronze data (structured but raw)
bronze_inpc:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/bacen_inpc/
  file_format: delta
  save_args:
    mode: overwrite

# INPC Silver layer (cleaned and validated)
silver_inpc:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/bacen_inpc/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

# INPC Gold layer (KPIs and aggregations)
gold_inpc:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/gold/inpc_kpis/
  file_format: delta
  save_args:
    mode: overwrite

# INPC validation results
inpc_validation_results:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/bacen/inpc_validation_results.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
# IGP-DI Raw data from BACEN API (stored in MinIO as JSON)
raw_igp_di:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/bacen/igp_di_bacen_raw.json

# IGP-DI Bronze data (structured but raw)
bronze_igp_di:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/bacen_igp_di/
  file_format: delta
  save_args:
    mode: overwrite

# IGP-DI Silver layer (cleaned and validated)
silver_igp_di:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/bacen_igp_di/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

# IGP-DI Gold layer (KPIs and aggregations)
gold_igp_di:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/gold/igp_di_kpis/
  file_format: delta
  save_args:
    mode: overwrite

# IGP-DI validation results
igp_di_validation_results:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/bacen/igp_di_validation_results.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
# IGP-M Raw data from BACEN API (stored in MinIO as JSON)
raw_igp_m:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/bacen/igp_m_bacen_raw.json

# IGP-M Bronze data (structured but raw)
bronze_igp_m:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/bacen_igp_m/
  file_format: delta
  save_args:
    mode: overwrite

# IGP-M Silver layer (cleaned and validated)
silver_igp_m:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/bacen_igp_m/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

# IGP-M Gold layer (KPIs and aggregations)
gold_igp_m:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/gold/igp_m_kpis/
  file_format: delta
  save_args:
    mode: overwrite

# IGP-M validation results
igp_m_validation_results:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/bacen/igp_m_validation_results.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
# IGP-10 Raw data from BACEN API (stored in MinIO as JSON)
raw_igp_10:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/bacen/igp_10_bacen_raw.json

# IGP-10 Bronze data (structured but raw)
bronze_igp_10:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/bacen_igp_10/
  file_format: delta
  save_args:
    mode: overwrite

# IGP-10 Silver layer (cleaned and validated)
silver_igp_10:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/bacen_igp_10/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

# IGP-10 Gold layer (KPIs and aggregations)
gold_igp_10:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/gold/igp_10_kpis/
  file_format: delta
  save_args:
    mode: overwrite

# IGP-10 validation results
igp_10_validation_results:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/bacen/igp_10_validation_results.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
# USD/BRL Raw data from BACEN API (stored in MinIO as JSON)
raw_usd_brl:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/bacen/usd_brl_bacen_raw.json

# USD/BRL Bronze data (structured but raw)
bronze_usd_brl:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/bacen_usd_brl/
  file_format: delta
  save_args:
    mode: overwrite

# USD/BRL Silver layer (cleaned and validated)
silver_usd_brl:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/bacen_usd_brl/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

# USD/BRL Gold layer (KPIs and aggregations)
gold_usd_brl:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/gold/usd_brl_kpis/
  file_format: delta
  save_args:
    mode: overwrite

# USD/BRL validation results
usd_brl_validation_results:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/bacen/usd_brl_validation_results.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
# EUR/BRL Raw data from BACEN API (stored in MinIO as JSON)
raw_eur_brl:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/bacen/eur_brl_bacen_raw.json

# EUR/BRL Bronze data (structured but raw)
bronze_eur_brl:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/bacen_eur_brl/
  file_format: delta
  save_args:
    mode: overwrite

# EUR/BRL Silver layer (cleaned and validated)
silver_eur_brl:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/bacen_eur_brl/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

# EUR/BRL Gold layer (KPIs and aggregations)
gold_eur_brl:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/gold/eur_brl_kpis/
  file_format: delta
  save_args:
    mode: overwrite

# EUR/BRL validation results
eur_brl_validation_results:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/bacen/eur_brl_validation_results.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
# RESERVAS INTERNACIONAIS datasets
raw_reservas_internacionais:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/bacen/reservas_internacionais_bacen_raw.json

bronze_reservas_internacionais:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/reservas_internacionais/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

silver_reservas_internacionais:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/reservas_internacionais/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

gold_reservas_internacionais:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/gold/reservas_internacionais/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

reservas_internacionais_validation_results:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/gold/bacen/reservas_internacionais_validation_results.json

# DIVIDA PIB datasets
raw_divida_pib:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/bacen/divida_pib_bacen_raw.json

bronze_divida_pib:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/divida_pib/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

silver_divida_pib:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/divida_pib/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

gold_divida_pib:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/gold/divida_pib/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

divida_pib_validation_results:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/gold/bacen/divida_pib_validation_results.json

# FOCUS PIB datasets
raw_focus_pib:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/bacen/focus_pib_bacen_raw.json

bronze_focus_pib:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/focus_pib/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

silver_focus_pib:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/focus_pib/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

gold_focus_pib:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/gold/focus_pib/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

focus_pib_validation_results:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/gold/bacen/focus_pib_validation_results.json

# ==============================================================================
# IBGE DATA SERIES
# ==============================================================================

# IPCA (Inflation) datasets
ibge_ipca_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/ibge/ibge_ipca_raw.json

ibge_ipca_bronze:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/ibge/inflacao/ipca/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

ibge_ipca_silver:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/ibge/inflacao/ipca/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

ibge_ipca_catalog_entry:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/ibge/ibge_ipca_catalog_entry.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
ibge_ipca_validation_report:
  type: json.JSONDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/gold/ibge/ibge_ipca_validation_report.json

# INPC (Inflation for Low Income) datasets
ibge_inpc_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/ibge/ibge_inpc_raw.json

ibge_inpc_bronze:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/ibge/inflacao/inpc/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

ibge_inpc_silver:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/ibge/inflacao/inpc/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

ibge_inpc_catalog_entry:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/ibge/ibge_inpc_catalog_entry.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
ibge_inpc_validation_report:
  type: json.JSONDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/gold/ibge/ibge_inpc_validation_report.json

# PIB Mensal (Monthly GDP) datasets
ibge_pib_mensal_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/ibge/ibge_pib_mensal_raw.json

ibge_pib_mensal_bronze:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/ibge/economia/pib_mensal/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

ibge_pib_mensal_silver:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/ibge/economia/pib_mensal/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

ibge_pib_mensal_catalog_entry:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/ibge/ibge_pib_mensal_catalog_entry.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
ibge_pib_mensal_validation_report:
  type: json.JSONDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/gold/ibge/ibge_pib_mensal_validation_report.json

# PIB Trimestral (Quarterly GDP) datasets
ibge_pib_trimestral_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/ibge/ibge_pib_trimestral_raw.json

ibge_pib_trimestral_bronze:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/ibge/economia/pib_trimestral/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

ibge_pib_trimestral_silver:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/ibge/economia/pib_trimestral/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

ibge_pib_trimestral_catalog_entry:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/ibge/ibge_pib_trimestral_catalog_entry.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
ibge_pib_trimestral_validation_report:
  type: json.JSONDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/gold/ibge/ibge_pib_trimestral_validation_report.json

# Desemprego (Unemployment) datasets
ibge_desemprego_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/ibge/ibge_desemprego_raw.json

ibge_desemprego_bronze:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/ibge/emprego/desemprego/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

ibge_desemprego_silver:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/ibge/emprego/desemprego/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

ibge_desemprego_catalog_entry:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/ibge/ibge_desemprego_catalog_entry.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
ibge_desemprego_validation_report:
  type: json.JSONDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/gold/ibge/ibge_desemprego_validation_report.json

# Renda Média (Average Income) datasets
ibge_renda_media_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/ibge/ibge_renda_media_raw.json

ibge_renda_media_bronze:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/ibge/emprego/renda_media/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

ibge_renda_media_silver:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/ibge/emprego/renda_media/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

ibge_renda_media_catalog_entry:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/ibge/ibge_renda_media_catalog_entry.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
ibge_renda_media_validation_report:
  type: json.JSONDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/gold/ibge/ibge_renda_media_validation_report.json

# População Economicamente Ativa (Labor Force) datasets
ibge_populacao_economicamente_ativa_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/ibge/ibge_populacao_economicamente_ativa_raw.json

ibge_populacao_economicamente_ativa_bronze:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/ibge/emprego/populacao_economicamente_ativa/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

ibge_populacao_economicamente_ativa_silver:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/ibge/emprego/populacao_economicamente_ativa/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

ibge_populacao_economicamente_ativa_catalog_entry:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/ibge/ibge_populacao_economicamente_ativa_catalog_entry.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
ibge_populacao_economicamente_ativa_validation_report:
  type: json.JSONDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/gold/ibge/ibge_populacao_economicamente_ativa_validation_report.json

# =====================================================
# ANBIMA - Associação Brasileira das Entidades dos Mercados Financeiro e de Capitais
# Financial market data including rates, indices, yield curves, and government bonds
# =====================================================

# ANBIMA Raw Data
anbima_cdi_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/anbima/anbima_cdi_raw.json

anbima_ima_b_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/anbima/anbima_ima_b_raw.json

anbima_ima_b_5_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/anbima/anbima_ima_b_5_raw.json

anbima_curva_di_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/anbima/anbima_curva_di_raw.json

anbima_curva_pre_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/anbima/anbima_curva_pre_raw.json

anbima_curva_ipca_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/anbima/anbima_curva_ipca_raw.json

anbima_ntn_b_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/anbima/anbima_ntn_b_raw.json

anbima_ltn_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/anbima/anbima_ltn_raw.json

anbima_mercado_secundario_raw:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/anbima/anbima_mercado_secundario_raw.json

# ANBIMA Raw Data Container (for bronze processing)
anbima_raw_data_container:
  type: pickle.PickleDataset
  filepath: s3a://lakehouse/bronze/anbima_raw_data_container.pkl

# ANBIMA Bronze Layer
anbima_bronze:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/anbima/
  file_format: delta
  load_args:
    header: true
    inferSchema: true
  save_args:
    mode: overwrite
    partitionBy: ["series", "date"]

# ANBIMA Silver Layer
anbima_silver:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/anbima/
  file_format: delta
  load_args:
    header: true
    inferSchema: true
  save_args:
    mode: overwrite
    partitionBy: ["series", "date_parsed"]

# ANBIMA Catalog Entry
anbima_catalog:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/anbima/anbima_financial_data_catalog_entry.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
# =====================================================
# ANBIMA Simple Pipeline Datasets
# =====================================================

# ANBIMA Simple Raw Data
anbima_cdi_raw_simple:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/anbima_cdi_raw_simple.json

anbima_ima_b_raw_simple:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/anbima_ima_b_raw_simple.json

anbima_curva_di_raw_simple:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/anbima_curva_di_raw_simple.json

anbima_ntn_b_raw_simple:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/anbima_ntn_b_raw_simple.json

anbima_ltn_raw_simple:
  type: text.TextDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/anbima_ltn_raw_simple.json

# ANBIMA Simple Processed Data
anbima_bronze_simple:
  type: json.JSONDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/bronze/anbima_bronze_simple.json

anbima_silver_simple:
  type: json.JSONDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/silver/anbima_silver_simple.json

anbima_catalog_simple:
  type: json.JSONDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/gold/anbima/anbima_catalog_simple.json

# ==============================================================================
# TESOURO DIRETO DATA
# ==============================================================================

# Tesouro Direto Raw Data (All Series Combined)
tesouro_all_series_raw:
  type: json.JSONDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/tesouro/tesouro_all_series_raw.json

# Tesouro Direto Bronze Layer (Unified)
tesouro_bronze_layer:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/tesouro_direto/
  file_format: delta

# Tesouro Direto Silver Layer (Quality Filtered)
tesouro_silver_layer:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/tesouro_direto/
  file_format: delta

# Tesouro Direto Catalog Entry
tesouro_catalog_entry:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/tesouro/tesouro_direto_catalog_entry.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
# ==============================================================================
# B3 - BRAZILIAN STOCK EXCHANGE DATA
# ==============================================================================

# B3 Raw Data (All Series Combined)
b3_raw_data_container:
  type: json.JSONDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/b3/b3_all_series_raw.json

# B3 Bronze Layer (Unified)
b3_bronze:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/b3/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

# B3 Silver Layer (Quality Filtered)
b3_silver:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/b3/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

# B3 Catalog Entry
b3_catalog_entry:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/b3/b3_catalog_entry.json
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}

# ==============================================================================
# IPEA/RECEITA FEDERAL - ECONOMIC & FISCAL DATA
# ==============================================================================

# IPEA/Receita Raw Data (All Series Combined)
ipea_receita_raw_data_container:
  type: json.JSONDataset
  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
  filepath: s3a://lakehouse/raw/ipea/ipea_receita_all_series_raw.json

# IPEA/Receita Bronze Layer (Unified)
ipea_receita_bronze:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/bronze/ipea_receita/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

# IPEA/Receita Silver Layer (Quality Filtered)
ipea_receita_silver:
  type: spark.SparkDataset
  filepath: s3a://lakehouse/silver/ipea_receita/
  file_format: delta
  save_args:
    mode: overwrite
    overwriteSchema: true

# IPEA/Receita Catalog Entry
ipea_receita_catalog_entry:
  type: json.JSONDataset
  filepath: s3a://lakehouse/gold/ipea/ipea_receita_catalog_entry.json

  fs_args:
    key: ${env:MINIO_USER}
    secret: ${env:MINIO_PASSWORD}
    client_kwargs:
      endpoint_url: ${env:MINIO_ENDPOINT}
